{"version":3,"sources":["Components/Phonebook.js","Components/AddNewContactForm.js","App.js","index.js"],"names":["Phonebook","props","show_persons","namefilter","phonebook","filter_str","map","person","name","number","onClick","deleteFunc","id","FilterByName","value","onChange","actionFunc","sstr","filter","includes","AddNewContactForm","nameTxt","editNameFunc","numTxt","editNumberFunc","type","onSubmitFunc","Notification","message","console","log","styleclass","className","App","useState","setMessage","setPhoneBook","newName","setNewName","newNumber","setNewNumber","filterStr","setFilterStr","useEffect","axios","get","then","response","data","length","event","target","preventDefault","person_index","findIndex","personData","post","addNewContact","newContact","concat","catch","error","setTimeout","person_name","window","confirm","changedPerson","put","updateContact","updatedContact","alert","contact","delete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.729a0c62.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Phonebook = (props) => {\r\n  const show_persons = namefilter(props.phonebook, props.filter_str)\r\n  return (\r\n    <>\r\n      {show_persons.map( person =>\r\n        <p key={person.name}> {person.name} {person.number}<button key={person.id} onClick={() => props.deleteFunc(person)}>delete</button></p>\r\n      )}\r\n    </>  \r\n  )\r\n}\r\n\r\n\r\nconst FilterByName = (props) => {\r\n    return(\r\n        <div> filter name with: \r\n          <input value = {props.filter_str} \r\n              onChange={props.actionFunc}/>\r\n        </div>\r\n      )\r\n  }\r\n  \r\n  const namefilter = (phonebook, sstr) => {\r\n    return(phonebook.filter(person => person.name.includes(sstr))\r\n    )\r\n  }\r\n  \r\n\r\nexport {Phonebook}\r\nexport {FilterByName}\r\n","import React from 'react'\r\n\r\nconst AddNewContactForm = (props) => {\r\n  return(\r\n    <>\r\n    <form>\r\n      <div> name: \r\n        <input value = {props.nameTxt} \r\n               onChange={props.editNameFunc}/>\r\n      </div>\r\n      <div> number: \r\n        <input value = {props.numTxt}\r\n               onChange={props.editNumberFunc}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={props.onSubmitFunc}>add</button>\r\n      </div>\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNewContactForm","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {Phonebook,FilterByName} from './Components/Phonebook'\r\nimport AddNewContactForm from './Components/AddNewContactForm'\r\nimport './index.css'\r\n\r\nconst addNewContact = (name, number) => {\r\n  const personData = { \r\n    name: name,\r\n    number: number \r\n  }\r\n  const request = axios.post('http://localhost:3001/api/persons',personData)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updateContact = (person, number) => {\r\n  const changedPerson = { ...person, number:number}\r\n  const request = axios.put(`http://localhost:3001/api/persons/${person.id}`,changedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removeContact = (id) => {\r\n  const request = axios.delete(`http://localhost:3001/api/persons/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst Notification = (props) => {\r\n  if (props.message === null) {\r\n    console.log(props.message)\r\n    return null\r\n  }\r\n  const styleclass = (props.message.includes(\"Failed\")) ?  \"error\" :  \"notification\"\r\n  return (\r\n    <div className={styleclass}> {props.message}  </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const [ message, setMessage] = useState(null)\r\n  const [ phonebook, setPhoneBook ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterStr, setFilterStr ] = useState('')\r\n  \r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const person_index = phonebook.findIndex(person => person.name === newName)\r\n    \r\n    if (person_index === -1){ \r\n      addNewContact(newName, newNumber)\r\n        .then( newContact => setPhoneBook(phonebook.concat(newContact)))\r\n        .catch(error => console.log(error))\r\n      setMessage(`Added ${newName}`)\r\n      setTimeout(() => { setMessage(null) }, 5000)\r\n    } else if (phonebook[person_index].number !== newNumber){\r\n      const person_name = phonebook[person_index].name\r\n      if (window.confirm(`Changing number of ${person_name}?`)) {\r\n        updateContact(phonebook[person_index], newNumber)\r\n          .then( updatedContact => setPhoneBook( phonebook.map( person => \r\n            person.id !== updatedContact.id ? person : updatedContact ) ) )\r\n          .catch(error => setMessage('Failed in updating number!'))\r\n        setMessage(`Updated number for ${person_name}`)\r\n        setTimeout(() => { setMessage(null) }, 5000)\r\n      }\r\n    } else {\r\n      alert(`${newName} with number ${newNumber} is already added to phonebook`)\r\n    }\r\n    \r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const deleteContact = (contact) => {\r\n    if (window.confirm(`Really want to remove ${contact.name} ?`)) {\r\n      removeContact(contact.id)\r\n        .then(() => {setPhoneBook(phonebook.filter(person => person.id !== contact.id))\r\n          setMessage(`Deleted ${contact.name}`)\r\n          setTimeout(() => { setMessage(null) }, 5000)} )\r\n        .catch(() => {alert(`Something wrong - could not remove contact ${contact.name}`)})\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('fetching phonebook')\r\n    axios\r\n      .get('http://localhost:3001/api/persons')\r\n      .then(response => {\r\n        console.log('fetcing ready')\r\n        setPhoneBook(response.data)\r\n      })\r\n  }, [])\r\n  console.log('render', phonebook.length, 'notes')\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message}/>\r\n      <FilterByName filter_str={filterStr} \r\n                    actionFunc={(event) => setFilterStr(event.target.value)}/>\r\n      \r\n      <h2>Add new contact</h2>\r\n      <AddNewContactForm onSubmitFunc={addPerson} \r\n                     nameTxt = {newName}\r\n                     numTxt = {newNumber}\r\n                     editNameFunc={(event) => setNewName(event.target.value)} \r\n                     editNumberFunc={(event) => setNewNumber(event.target.value)}/>\r\n      <h2>Numbers</h2>\r\n      <Phonebook phonebook={phonebook} filter_str={filterStr} deleteFunc={deleteContact}/>    \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}