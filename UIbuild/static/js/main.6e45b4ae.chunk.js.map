{"version":3,"sources":["Components/Phonebook.js","Components/AddNewContactForm.js","App.js","index.js"],"names":["Phonebook","props","show_persons","namefilter","phonebook","filter_str","map","person","name","number","onClick","deleteFunc","id","FilterByName","value","onChange","actionFunc","sstr","filter","includes","AddNewContactForm","nameTxt","editNameFunc","numTxt","editNumberFunc","type","onSubmitFunc","base_url","Notification","message","console","log","styleclass","className","App","useState","setMessage","setPhoneBook","newName","setNewName","newNumber","setNewNumber","filterStr","setFilterStr","useEffect","axios","get","then","response","data","catch","error","length","event","target","preventDefault","person_index","findIndex","personData","post","addNewContact","newContact","concat","setTimeout","person_name","window","confirm","changedPerson","put","updateContact","updatedContact","alert","contact","delete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e45b4ae.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Phonebook = (props) => {\r\n  const show_persons = namefilter(props.phonebook, props.filter_str)\r\n  return (\r\n    <>\r\n      {show_persons.map( person =>\r\n        <p key={person.name}> {person.name} {person.number}<button key={person.id} onClick={() => props.deleteFunc(person)}>delete</button></p>\r\n      )}\r\n    </>  \r\n  )\r\n}\r\n\r\n\r\nconst FilterByName = (props) => {\r\n    return(\r\n        <div> filter name with: \r\n          <input value = {props.filter_str} \r\n              onChange={props.actionFunc}/>\r\n        </div>\r\n      )\r\n  }\r\n  \r\nconst namefilter = (phonebook, sstr) => {\r\n  return(phonebook.filter(person => person.name.includes(sstr))\r\n  )\r\n}\r\n  \r\n\r\nexport {Phonebook}\r\nexport {FilterByName}\r\n","import React from 'react'\r\n\r\nconst AddNewContactForm = (props) => {\r\n  return(\r\n    <>\r\n    <form>\r\n      <div> name: \r\n        <input value = {props.nameTxt} \r\n               onChange={props.editNameFunc}/>\r\n      </div>\r\n      <div> number: \r\n        <input value = {props.numTxt}\r\n               onChange={props.editNumberFunc}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={props.onSubmitFunc}>add</button>\r\n      </div>\r\n    </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddNewContactForm","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {Phonebook,FilterByName} from './Components/Phonebook'\r\nimport AddNewContactForm from './Components/AddNewContactForm'\r\nimport './index.css'\r\n\r\n// const base_url = 'https://immense-shore-44135.herokuapp.com/api/persons'\r\nconst base_url = '/api/persons'\r\n\r\nconst addNewContact = (name, number) => {\r\n  const personData = { \r\n    name: name,\r\n    number: number \r\n  }\r\n  const request = axios.post(base_url,personData)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updateContact = (person, number) => {\r\n  const changedPerson = { ...person, number:number}\r\n  const request = axios.put(base_url+'/'+person.id,changedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removeContact = (id) => {\r\n  const request = axios.delete(base_url+'/'+id)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst Notification = (props) => {\r\n  if (props.message === null) {\r\n    return null\r\n  }\r\n  console.log('TRING TO RENDER SOMETHING')\r\n  console.log(props.message)\r\n  const styleclass = (props.message.includes(\"rror\")) ?  \"error\" :  \"notification\"\r\n  return (\r\n    <div className={styleclass}> {props.message}  </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const [ message, setMessage] = useState(null)\r\n  const [ phonebook, setPhoneBook ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filterStr, setFilterStr ] = useState('')\r\n  \r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const person_index = phonebook.findIndex(person => person.name === newName)\r\n    \r\n    if (person_index === -1)\r\n    { \r\n      addNewContact(newName, newNumber)\r\n        .then( newContact => {\r\n          console.log(\"IIIIIMMMMHHHHHEEEEEEEERRRRE\")\r\n          setPhoneBook(phonebook.concat(newContact))\r\n          setMessage(`Added ${newName}`)\r\n          setTimeout(() => { setMessage(null) }, 5000)          \r\n        })\r\n        .catch(error => {\r\n          //alert(`Failed adding ${newName}! ${error}`)\r\n          setMessage(error.response.data)\r\n          setTimeout(() => { setMessage(null) }, 5000)\r\n          console.log('ADDNEWCONTACTERROR:')             \r\n          console.log(error.response.data)\r\n        })\r\n\r\n    } \r\n    else if (phonebook[person_index].number !== newNumber)\r\n    {\r\n      const person_name = phonebook[person_index].name\r\n      \r\n      if (window.confirm(`Changing number of ${person_name}?`)) \r\n      {\r\n        updateContact(phonebook[person_index], newNumber)\r\n          .then( updatedContact => { \r\n            setPhoneBook( phonebook.map( person => \r\n              person.id !== updatedContact.id ? person : updatedContact ) ) \r\n            setMessage(`Updated number for ${person_name}`)\r\n            setTimeout(() => { setMessage(null) }, 5000)\r\n          })\r\n          .catch(error => {\r\n            alert('Failed updating number!')\r\n            console.log(error)      \r\n          })\r\n        console.log(message)\r\n      }\r\n    } \r\n    else \r\n    {\r\n      alert(`${newName} with number ${newNumber} is already added to phonebook`)\r\n    }\r\n    \r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const deleteContact = (contact) => {\r\n    if (window.confirm(`Really want to remove ${contact.name} ?`)) {\r\n      removeContact(contact.id)\r\n        .then(() => {\r\n          setPhoneBook(phonebook.filter(person => person.id !== contact.id))\r\n          setMessage(`Deleted ${contact.name}`)\r\n          setTimeout(() => { setMessage(null) }, 5000)} )\r\n        .catch(() => {\r\n          alert(`Something wrong - could not remove contact ${contact.name}`)\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('fetching phonebook to UI')\r\n    axios\r\n      .get(base_url)\r\n      .then(response => {\r\n        console.log('fetced phonebook to UI')\r\n        setPhoneBook(response.data)\r\n      })\r\n      .catch(function(error) {\r\n        //console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  console.log('render', phonebook.length, 'notes')\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message}/>\r\n      <FilterByName filter_str={filterStr} \r\n                    actionFunc={(event) => setFilterStr(event.target.value)}/>\r\n      \r\n      <h2>Add new contact</h2>\r\n      <AddNewContactForm onSubmitFunc={addPerson} \r\n                     nameTxt = {newName}\r\n                     numTxt = {newNumber}\r\n                     editNameFunc={(event) => setNewName(event.target.value)} \r\n                     editNumberFunc={(event) => setNewNumber(event.target.value)}/>\r\n      <h2>Numbers</h2>\r\n      <Phonebook phonebook={phonebook} filter_str={filterStr} deleteFunc={deleteContact}/>    \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}